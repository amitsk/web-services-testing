buildscript {
    ext.kotlin_version = '1.2.21'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.3'
        classpath 'com.kncept.junit5.reporter:junit-reporter:1.0.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'maven'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'com.kncept.junit5.reporter'

group = 'com.github.webservicetesting'
version = '1.0-SNAPSHOT'

description = """"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

ext {
    restAssuredVersion = '3.0.0'
    jacksonVersion = '2.9.4'
    junitPlatformVersion = '1.0.3'
    junitJupiterVersion = '5.0.3'
    log4jVersion = '2.10.0'
}

repositories {
    maven { url "https://jcenter.bintray.com" }
    maven { url "http://repo.maven.apache.org/maven2" }
    mavenCentral()
}

dependencies {
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.3.2'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: jacksonVersion
    compile group: 'com.typesafe', name: 'config', version: '1.3.0-M3'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: jacksonVersion

    testCompile group: 'io.rest-assured', name: 'rest-assured', version: restAssuredVersion
    testCompile group: 'io.rest-assured', name: 'json-path', version: restAssuredVersion
    testCompile group: 'io.rest-assured', name: 'xml-path', version: restAssuredVersion
    testCompile group: 'io.rest-assured', name: 'json-schema-validator', version: restAssuredVersion
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.9.0'
    // JUnit Jupiter API and TestEngine implementation
    testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
    testCompile("org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
    // To avoid compiler warnings about @API annotations in JUnit code
    testCompileOnly('org.apiguardian:apiguardian-api:1.0.0')

    // To use Log4J's LogManager
    testRuntime("org.apache.logging.log4j:log4j-core:${log4jVersion}")
    testRuntime("org.apache.logging.log4j:log4j-jul:${log4jVersion}")
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

junitPlatform {
    // platformVersion '1.0.3'
    filters {
        engines {
            // include 'junit-jupiter', 'junit-vintage'
            // exclude 'custom-engine'
        }
        tags {
            // include 'fast'
            exclude 'slow'
        }
        // includeClassNamePattern '.*Test'
    }
    // configurationParameter 'junit.jupiter.conditions.deactivate', '*'
    // enableStandardTestTask true
    // reportsDir file('build/test-results/junit-platform') // this is the default
    logManager 'org.apache.logging.log4j.jul.LogManager'
}

junitPlatformTest.finalizedBy 'junitHtmlReport'
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}